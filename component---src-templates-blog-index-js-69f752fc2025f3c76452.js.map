{"version":3,"sources":["webpack:///./src/components/SEO.js","webpack:///./src/components/Panel.js","webpack:///./src/components/Footer.js","webpack:///./src/utils/helpers.js","webpack:///./src/assets/profile-pic.jpeg","webpack:///./src/components/Bio.js","webpack:///./src/templates/blog-index.js"],"names":["SEO","meta","image","title","description","slug","lang","query","render","data","siteMetadata","site","metaDescription","metaImage","siteUrl","url","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps","Panel","children","style","fontSize","border","borderRadius","padding","background","wordBreak","Footer","marginTop","rhythm","paddingTop","float","href","React","Component","formatReadingTime","minutes","cups","Math","round","Array","E","fill","join","formatPostDate","date","Date","prototype","toLocaleDateString","args","day","month","year","filter","Boolean","module","exports","Bio","display","marginBottom","className","src","profilePic","alt","marginRight","width","height","maxWidth","BlogIndexTemplate","props","changeCategory","bind","state","active","toggleClass","e","document","getElementsByClassName","classList","remove","target","targetCategory","text","querySelectorAll","forEach","item","add","siteTitle","get","this","langKey","pageContext","posts","categorys","map","node","push","from","Set","location","rel","color","category","categoryClass","key","onClick","textAlign","fields","class","fontFamily","boxShadow","to","frontmatter","timeToRead","dangerouslySetInnerHTML","__html","spoiler"],"mappings":"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","file":"component---src-templates-blog-index-js-69f752fc2025f3c76452.js","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst query = graphql`\n  query GetSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        author\n        description\n        siteUrl\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nfunction SEO({ meta, image, title, description, slug, lang = 'en' }) {\n  return (\n    <StaticQuery\n      query={query}\n      render={data => {\n        const { siteMetadata } = data.site;\n        const metaDescription = description || siteMetadata.description;\n        const metaImage = image ? `${siteMetadata.siteUrl}/${image}` : null;\n        const url = `${siteMetadata.siteUrl}${slug}`;\n        return (\n          <Helmet\n            htmlAttributes={{ lang }}\n            {...(title\n              ? {\n                  titleTemplate: `%s ‚Äî ${siteMetadata.title}`,\n                  title,\n                }\n              : {\n                  title: `${siteMetadata.title} ‚Äî A blog by jieun hong`,\n                })}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:url',\n                content: url,\n              },\n              {\n                property: 'og:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: siteMetadata.social.twitter,\n              },\n              {\n                name: 'twitter:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                metaImage\n                  ? [\n                      {\n                        property: 'og:image',\n                        content: metaImage,\n                      },\n                      {\n                        name: 'twitter:image',\n                        content: metaImage,\n                      },\n                    ]\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  meta: [],\n  title: '',\n  slug: '',\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  image: PropTypes.string,\n  meta: PropTypes.array,\n  slug: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from 'react';\n\nfunction Panel({ children, style = {} }) {\n  return (\n    <p\n      style={{\n        fontSize: '0.9em',\n        border: '1px solid var(--hr)',\n        borderRadius: '0.75em',\n        padding: '0.75em',\n        background: 'var(--inlineCode-bg)',\n        wordBreak: 'keep-all',\n        ...style,\n      }}\n    >\n      {children}\n    </p>\n  );\n}\n\nexport default Panel;\n","import React from 'react';\n\nimport { rhythm } from '../utils/typography';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        style={{\n          marginTop: rhythm(2.5),\n          paddingTop: rhythm(1),\n        }}\n      >\n        <div style={{ float: 'right' }}>\n          {/* <a href=\"/rss.xml\" target=\"_blank\" rel=\"noopener noreferrer\">\n            rss\n          </a> */}\n        </div>\n        <a href=\"javascript:alert('ÎßâÏïÑÎë†..');\">\n          {/* <a\n          href=\"https://github.com/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        > */}\n          github\n        </a>{' '}\n        &bull;{' '}\n        {\n          <a href=\"javascript:alert('ÎßâÏïÑÎë†..');\">\n            {/* <a href=\"http://.me\" target=\"_blank\" rel=\"noopener noreferrer\"></a> */}\n            portfolio\n          </a>\n        }\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","export function formatReadingTime(minutes) {\n  let cups = Math.round(minutes / 5);\n  let bowls = 0;\n  if (cups > 5) {\n    return `${new Array(Math.round(cups / Math.E))\n      .fill('üç±')\n      .join('')} ${minutes} min read`;\n  } else {\n    return `${new Array(cups || 1).fill('‚òïÔ∏è').join('')} ${minutes} min read`;\n  }\n}\n\n// `lang` is optional and will default to the current user agent locale\nexport function formatPostDate(date, lang) {\n  if (typeof Date.prototype.toLocaleDateString !== 'function') {\n    return date;\n  }\n\n  date = new Date(date);\n  const args = [\n    lang,\n    { day: 'numeric', month: 'long', year: 'numeric' },\n  ].filter(Boolean);\n  return date.toLocaleDateString(...args);\n}\n","module.exports = __webpack_public_path__ + \"static/profile-pic-5a801cf67bb6b2b3181e38f18c89933b.jpeg\";","import React from 'react';\nimport profilePic from '../assets/profile-pic.jpeg';\nimport { rhythm } from '../utils/typography';\n\nclass Bio extends React.Component {\n  render() {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          marginBottom: rhythm(1),\n        }}\n      >\n        <a href=\"/profile\" className=\"profile\">\n          <img\n            src={profilePic}\n            alt={`jieunhong`}\n            style={{\n              marginRight: rhythm(1 / 2),\n              marginBottom: 0,\n              width: rhythm(2),\n              height: rhythm(2),\n              borderRadius: '50%',\n            }}\n          />\n        </a>\n        <p style={{ maxWidth: 310 }}>\n          Personal blog by Jieun Hong.\n          {/* <a href=\"http://bbubbu.me\">ÌôçÏßÄÏùÄ</a>.  */}\n          <br></br>&nbsp;Hello JIEUN World !\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Bio;\n","import { Link, graphql } from 'gatsby';\nimport { formatPostDate, formatReadingTime } from '../utils/helpers';\n\nimport Bio from '../components/Bio';\nimport Footer from '../components/Footer';\nimport Layout from '../components/Layout';\nimport Panel from '../components/Panel';\nimport React from 'react';\nimport SEO from '../components/SEO';\nimport get from 'lodash/get';\nimport { rhythm } from '../utils/typography';\nimport '../components/custom.css';\n\nclass BlogIndexTemplate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.changeCategory = this.changeCategory.bind(this);\n    this.state = {\n      active: false,\n    };\n  }\n  toggleClass(e) {\n    document.getElementsByClassName('clicked')[0].classList.remove('clicked');\n    e.target.className = 'clicked';\n    const targetCategory = e.target.text;\n\n    if (targetCategory != 'Ï†ÑÏ≤¥') {\n      document\n        .querySelectorAll('.article')\n        .forEach(item => item.classList.add('none'));\n      document\n        .querySelectorAll('.' + targetCategory)\n        .forEach(item => item.classList.remove('none'));\n    } else {\n      document\n        .querySelectorAll('.article')\n        .forEach(item => item.classList.remove('none'));\n    }\n  }\n  changeCategory() {\n    document.getElementsByClassName('clicked')[0].classList.remove('clicked');\n  }\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title');\n    const langKey = this.props.pageContext.langKey;\n    const posts = get(this, 'props.data.allMarkdownRemark.edges');\n    var categorys = ['Ï†ÑÏ≤¥'];\n\n    posts.map(node => categorys.push(get(node, 'node.frontmatter.category')));\n    categorys = Array.from(new Set(categorys));\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO />\n        <aside>\n          <Bio />\n        </aside>\n        <main>\n          {langKey !== 'en' && langKey !== 'ru' && (\n            <Panel>\n              These articles have been{' '}\n              <a\n                href=\"https://github.com/gaearon/overreacted.io#contributing-translations\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                translated by the community\n              </a>\n              .\n            </Panel>\n          )}\n          <div\n            style={{\n              marginBottom: '-1rem',\n              color: 'var(--textTitle)',\n              display: 'flex',\n            }}\n          >\n            {categorys.map(category => {\n              let categoryClass = category == 'Ï†ÑÏ≤¥' ? 'clicked' : '';\n              return (\n                <a\n                  key={category}\n                  className={categoryClass}\n                  onClick={this.toggleClass}\n                  style={{\n                    padding: '0 15px',\n                    border: '0.1rem solid',\n                    borderRadius: '15px',\n                    textAlign: 'center',\n                    marginRight: '20px',\n                  }}\n                >\n                  {category}\n                </a>\n              );\n            })}\n          </div>\n          {posts.map(({ node }) => {\n            const title = get(node, 'frontmatter.title') || node.fields.slug;\n            const category =\n              get(node, 'frontmatter.category') || node.fields.slug;\n            return (\n              <article key={node.fields.slug} class={category + ' article'}>\n                <header>\n                  <h3\n                    style={{\n                      fontFamily: 'Montserrat, sans-serif',\n                      fontSize: rhythm(1),\n                      marginBottom: rhythm(1 / 4),\n                    }}\n                  >\n                    <Link\n                      style={{ boxShadow: 'none' }}\n                      to={node.fields.slug}\n                      rel=\"bookmark\"\n                    >\n                      {title}\n                    </Link>\n                  </h3>\n                  <small>\n                    {formatPostDate(node.frontmatter.date, langKey)}\n                    {` ‚Ä¢ ${formatReadingTime(node.timeToRead)}`}\n                  </small>\n                </header>\n                <p\n                  dangerouslySetInnerHTML={{ __html: node.frontmatter.spoiler }}\n                />\n              </article>\n            );\n          })}\n        </main>\n        <Footer />\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndexTemplate;\n\n//filter: { frontmatter: { category: { eq: \"Í∞úÎ∞ú\" } }, fields: { langKey: { eq: $langKey } } }\nexport const pageQuery = graphql`\n  query($langKey: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      filter: { fields: { langKey: { eq: $langKey } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            langKey\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            spoiler\n            category\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}